

-hacer pathings con os.cwd etc (PARA FOTOS Y PARA CARGAR IMAGENES)



-200 px para los datos de la partida, encontrar un fondo/ patron para el fondo



        if self.movex == 'left' and self.rect.left > BLOCKWIDTH:
            self.rect.move_ip(-PLAYERVELOCITY, 0)
        elif self.movex == 'right' and self.rect.left < LIMITWIDTHGROUND:
            self.rect.move_ip(PLAYERVELOCITY, 0)
        else:
            pass


            875 x 150

            850 x 760 pos 300 w 40 h


//     {
//     "width":"",
//     "heigth":"",
//     "x":"",
//     "y":""
// },
//     {
//     "width":"",
//     "heigth":"",
//     "x":"",
//     "y":""
// },
//     {
//     "width":"",
//     "heigth":"",
//     "x":"",
//     "y":""
// },
//     {
//     "width":"",
//     "heigth":"",
//     "x":"",
//     "y":""
// }  


grid 18/2 filas 12/2 columnas o 19 y 13




or plataforma in self.plataformas:
                if plataforma.rect.colliderect(enemy.rect):
                    print('asd')
                    if enemy.velocityX < 0:
                        enemy.currentFacing = 'rigth'
                        enemy.velocityX = 2
                    elif enemy.velocityX > 0:
                        enemy.currentFacing = 'left'
                        enemy.velocityX = -2









                            def attack(self):

        if self.currentFacing == 'rigth':
            pygame.draw.rect(self.screen, (0, 250, 250), pygame.rect.Rect(
                self.rect.centerx, self.rect.centery, PLAYERWIDTH*4, PLAYERHEIGHT))
        elif self.currentFacing == 'left':
            self.animateDirection('attackizq')
